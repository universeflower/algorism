def radix_sort(a,base=10): 
    size = len(a) 
    maxval = max(a) 
    exp = 1 
    while exp <= maxval:
        output = [0]*size 
        count = [0]*base 
        for i in range(size): 
            count[(a[i]//exp)%base] += 1
        for i in range(1,base): 
            count[i]+=count[i-1]
        for i in range(size-1,-1,-1): # 
            j = (a[i]//exp)%base 
            output[count[j]-1] = a[i]
            count[j] -= 1 
        for i in range(size):
            a[i]=output[i] 
        exp *= base 
arr = [9,1,22,4,0,1,22,100,10]
radix_sort(arr)
print(arr)















def radix_sort(a, base=10):
    def list_to_buckets(a, base, iteration):
        buckets = [[] for x in range(base)]
        for x in a:
            digit = (x // (base ** iteration)) % base
            buckets[digit].append(x)
        return buckets
    def buckets_to_list(buckets):
        a = []
        for bucket in buckets:
            for x in bucket:
                a.append(x)
        return a
    maxval = max(a)
    it = 0
    while base ** it <= maxval:
        a = buckets_to_list(list_to_buckets(a, base, it))
        it += 1
    return a
arr = [9,1,22,4,0,1,22,100,10]
arr = radix_sort(arr)
print( arr )
# [0, 1, 1, 4, 9, 10, 22, 22, 100]
















def countingSort(arr, digit):
    n = len(arr)
  
    output = [0] * (n)
    count = [0] * (10)
    
    for i in range(0, n):
        index = int(arr[i]/digit) 
        count[ (index)%10 ] += 1
 
    for i in range(1,10):
        count[i] += count[i-1]  

  
    i = n - 1
    while i >= 0:
        index = int(arr[i]/digit)
        output[ count[ (index)%10 ] - 1] = arr[i]
        count[ (index)%10 ] -= 1
        i -= 1
 
    for i in range(0,len(arr)): 
        arr[i] = output[i]
 
def radixSort(arr):
    
    maxValue = max(arr)  
    digit = 1
    while int(maxValue/digit) > 0: 
        countingSort(arr,digit)
        digit *= 10
 
arr = [ 170, 45, 75, 90, 802, 24, 2, 66]
radixSort(arr)
 
for i in range(len(arr)):
    print(arr[i], end=" ")